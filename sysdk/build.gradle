plugins {
    id 'com.android.library'
////    id 'maven-publish'
}
//apply plugin: 'com.android.library'
apply plugin: 'com.github.dcendents.android-maven'
group='com.github.moke123666'
apply plugin: 'com.kezong.fat-aar'

android {
    compileSdkVersion 29

    defaultConfig {
        minSdkVersion 16
        targetSdkVersion 29
        versionCode 1
        versionName "1.0"

        multiDexEnabled true
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    repositories {
        flatDir {
            dirs 'libs' //this way we can find the .aar file in libs folder
        }
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
//    implementation(name: 'appsSySDK-release', ext: 'aar')
//    api project(path: ':aar')
    implementation 'androidx.appcompat:appcompat:1.2.0'
    implementation 'com.google.android.material:material:1.3.0'
//    testImplementation 'junit:junit:4.+'
//    androidTestImplementation 'androidx.test.ext:junit:1.1.2'
//    androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'


//    //网盾
//    implementation(name: 'netmobsecLib-4.4.5.6', ext: 'aar')
//
//    implementation(name: 'msa_mdid_1.0.13', ext: 'aar')//获取oaid
//
//    //top on 广告集成
//    implementation(name: 'anythink_china_core', ext: 'aar')
//    implementation(name: 'anythink_core', ext: 'aar')
//    implementation(name: 'anythink_native', ext: 'aar')
//    implementation(name: 'anythink_rewardvideo', ext: 'aar')
//    implementation(name: 'anythink_interstitial', ext: 'aar')
//    implementation(name: 'anythink_splash', ext: 'aar')
//    implementation(name: 'anythink_banner', ext: 'aar')
//    implementation(name: 'tramini_sdk', ext: 'aar')
//
//    //穿山甲
//    implementation(name: 'anythink_network_pangle_china', ext: 'aar')
//    implementation(name: 'open_ad_sdk_3.8.0.6', ext: 'aar')
//    //gdt
//    implementation(name: 'anythink_network_gdt', ext: 'aar')
//    implementation(name: 'GDTSDK.unionNormal.4.391.1261', ext: 'aar')
//    //快手
//    implementation(name: 'anythink_network_kuaishou', ext: 'aar')
//    implementation(name: 'kssdk-ad--3.3.13-publishRelease-c0f57ba52', ext: 'aar')
//
//    //sigmob
//    implementation(name: 'anythink_network_sigmob', ext: 'aar')
//    implementation(name: 'windAd-3.3.3', ext: 'aar')
//
//    //mtg
//    implementation(name: 'anythink_network_mintegral_china', ext: 'aar')
//    implementation(name: 'mbridge_chinasame', ext: 'aar')
//    implementation(name: 'mbridge_interstitial', ext: 'aar')
//    implementation(name: 'mbridge_interstitialvideo', ext: 'aar')
//    implementation(name: 'mbridge_mbbanner', ext: 'aar')
//    implementation(name: 'mbridge_mbbid', ext: 'aar')
//    implementation(name: 'mbridge_mbjscommon', ext: 'aar')
//    implementation(name: 'mbridge_mbnative', ext: 'aar')
//    implementation(name: 'mbridge_mbnativeadvanced', ext: 'aar')
//    implementation(name: 'mbridge_mbsplash', ext: 'aar')
//    implementation(name: 'mbridge_nativeex', ext: 'aar')
//    implementation(name: 'mbridge_playercommon', ext: 'aar')
//    implementation(name: 'mbridge_reward', ext: 'aar')
//    implementation(name: 'mbridge_videocommon', ext: 'aar')
//    implementation(name: 'mbridge_videojs', ext: 'aar')


    //top on 广告集成
    compileOnly files('libs/anythink_china_core.aar')
    compileOnly files('libs/anythink_core.aar')
    compileOnly files('libs/anythink_native.aar')
    compileOnly files('libs/anythink_rewardvideo.aar')
    compileOnly files('libs/anythink_interstitial.aar')
    compileOnly files('libs/anythink_splash.aar')
    compileOnly files('libs/anythink_banner.aar')
    compileOnly files('libs/tramini_sdk.aar')

    compileOnly files('libs/anythink_network_pangle_china.aar')
    compileOnly files('libs/open_ad_sdk_3.8.0.6.aar')

    compileOnly files('libs/anythink_network_gdt.aar')
    compileOnly files('libs/GDTSDK.unionNormal.4.391.1261.aar')

    compileOnly files('libs/anythink_network_kuaishou.aar')
    compileOnly files('libs/kssdk-ad--3.3.13-publishRelease-c0f57ba52.aar')

    compileOnly files('libs/anythink_network_sigmob.aar')
    compileOnly files('libs/windAd-3.3.3.aar')

    compileOnly files('libs/anythink_network_mintegral_china.aar')
    compileOnly files('libs/mbridge_chinasame.aar')
    compileOnly files('libs/mbridge_interstitial.aar')
    compileOnly files('libs/mbridge_interstitialvideo.aar')
    compileOnly files('libs/mbridge_mbbanner.aar')
    compileOnly files('libs/mbridge_mbbid.aar')
    compileOnly files('libs/mbridge_mbjscommon.aar')
    compileOnly files('libs/mbridge_mbnative.aar')
    compileOnly files('libs/mbridge_mbnativeadvanced.aar')
    compileOnly files('libs/mbridge_mbsplash.aar')
    compileOnly files('libs/mbridge_nativeex.aar')
    compileOnly files('libs/mbridge_playercommon.aar')
    compileOnly files('libs/mbridge_reward.aar')
    compileOnly files('libs/mbridge_videocommon.aar')
    compileOnly files('libs/mbridge_videojs.aar')

    compileOnly files('libs/netmobsecLib-4.4.5.6.aar')

    embed(name: 'appsSySDK', ext: 'aar')
}

fataar {
    /**
     * If transitive is true, local jar module and remote library's dependencies will be implementation.
     * If transitive is false, just implementation first level dependency
     * Local aar project does not support transitive, always implementation first level
     * Default value is false
     * @since 1.3.0
     */
    transitive = true
}